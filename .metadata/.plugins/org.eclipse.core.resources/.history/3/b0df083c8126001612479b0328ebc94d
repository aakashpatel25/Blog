package com.Blog.ManagementService;

import java.util.List;

import com.Blog.beans.Blog;
import com.Blog.beans.Users;

public interface IBlogManagementService {

	/**
	 * To create a blog post.
	 * 
	 * @param username
	 *            Username of the user writing the blog.
	 * @param title
	 *            Title of the post.
	 * @param post
	 *            Content of the post.
	 * @return boolean If the post was successfully saved.
	 */
	public boolean createBlogPost(String username, String title, String post);

	/**
	 * To change the title of the blog post.
	 * 
	 * @param username
	 *            Username of the user who wrote the post.
	 * @param title
	 *            Current title of the post.
	 * @param newTitle
	 *            New title of the post.
	 * @return boolean Depending on success or failure of modification of title.
	 */
	public boolean editBlogTitle(String username, String title, String newTitle);

	/**
	 * To edit the blog post.
	 * 
	 * @param username
	 *            Username of the user writing the post.
	 * @param title
	 *            Title of the post.
	 * @param editedPost
	 *            Modified post.
	 * @return boolean Success or failure of modication.
	 */
	public boolean editBlogPost(String username, String title, String editedPost);

	/**
	 * To delete a blog post.
	 * 
	 * @param username
	 *            Username of the user who wrote the post.
	 * @param title
	 *            Title of the post.
	 * @return boolean If the post was deleted successfully.
	 */
	public boolean deletePost(String username, String title);

	/**
	 * To load the most recently written posts.
	 * 
	 * @return List<Blog> List of recently written posts.
	 */
	public List<Blog> loadBlogs();

	/**
	 * To like a particular blog.
	 * 
	 * @param username
	 *            Username of the user liking the post.
	 * @param title
	 *            Title of the post.
	 * @param author
	 *            Author of the post.
	 * @return boolean Success or failure of the like.
	 */
	public boolean likeBlog(String author, String title, String username);

	/**
	 * To get the number of likes on a particular post.
	 * 
	 * @param author
	 *            Author of the post.
	 * @param title
	 *            Title of the post.
	 * @return long Number of likes on a post.
	 */
	public long getNumberOfLikes(String author, String title);

	/**
	 * To get post like by users.
	 * 
	 * @param author
	 *            Author of the post.
	 * @param title
	 *            Title of the post.
	 * @return List<Users> List of users that liked the blog.
	 */
	public List<Users> getBlogLikeByUser(String author, String title);

	/**
	 * To unlike a liked post.
	 * 
	 * @param author
	 *            Author of the post.
	 * @param title
	 *            Title of the post.
	 * @param username
	 *            Username of the user who liked the post.
	 * @return boolean Depending on success of failure of unlike operation.
	 */
	public boolean unlikePost(String author, String title, String username);
	
	/**
	 * To comment on a post.
	 * 
	 * @param author
	 *            Author of the post.
	 * @param title
	 *            Title of the post.
	 * @param username
	 *            Username of the user commenting the post.
	 * @param message
	 *            Comment.
	 * @return boolean Success or failure of the operation.
	 */
	public boolean commentOnPost(String author, String title, String username, String message);
	
	/**
	 * To edit comment on a post.
	 * 
	 * @param author
	 *            Author of the post.
	 * @param title
	 *            Title of the post.
	 * @param username
	 *            Username of the user who wrote and is editing the comment.
	 * @param newMessage
	 *            Comment.
	 * @return boolean Success or failure of the operation.
	 */
	public boolean editComment(String author,String title,String username, String newMessage);
	
	public boolean deleteComment(String author,String title,String username);
}
